// Generated by https://quicktype.io

<<<<<<< HEAD
import 'package:flutter/widgets.dart';

=======
>>>>>>> origin/main
class Trending {
  int page;
  int totalResults;
  int totalPages;
  List<Result> results;

  Trending({
    this.page,
    this.totalResults,
    this.totalPages,
    this.results,
  });
}

<<<<<<< HEAD
//Clase para los favoritos
class MovieFavorite {
  int id;
  String title;
  String overview;
  String backdropPath;
  String posterPath;
  double popularity;
  String releaseDate;
  double voteAverage;
  String idMovie;

  MovieFavorite({
    this.id,
    this.idMovie,
    this.title,
    this.overview,
    this.backdropPath,
    this.posterPath,
    this.popularity,
    this.releaseDate,
    this.voteAverage,
  });
  //para favorito
  factory MovieFavorite.fromJSONFavorite(Map<String, dynamic> movie) {
    MovieFavorite result = MovieFavorite(
        id: movie["id"],
        idMovie: movie['idMovie'],
        title: movie["title"],
        overview: movie["overview"],
        backdropPath: movie["backdropPath"],
        posterPath: movie["posterPath"],
        popularity: movie['popularity'],
        releaseDate: movie["releaseDate"],
        voteAverage: movie["voteAverage"] is int
            ? (movie["voteAverage"] as int).toDouble()
            : movie["voteAverage"]);
    return result;
  }
  Map<String, dynamic> movieToJSON() {
    return {
      "idMovie": id,
      "title": title,
      "overview": overview,
      "backdropPath": backdropPath,
      "posterPath": posterPath,
      "releaseDate": releaseDate,
      "voteAverage": voteAverage
    };
  }
}

=======
>>>>>>> origin/main
class Result {
  double popularity;
  int voteCount;
  bool video;
  String posterPath;
  int id;
  String backdropPath;
  String title;
  double voteAverage;
  String overview;
  String releaseDate;

  factory Result.fromJSON(Map<String, dynamic> map) {
    return Result(
        popularity: map['popularity'],
        voteCount: map['vote_count'],
        video: map['video'],
        posterPath: map['poster_path'],
        id: map['id'],
        backdropPath: map['backdrop_path'],
        title: map['title'],
        voteAverage: map['vote_average'] is int
            ? (map['vote_average'] as int).toDouble()
            : map['vote_average'],
        overview: map['overview'],
        releaseDate: map['release_date']);
  }

  Result({
    this.popularity,
    this.voteCount,
    this.video,
    this.posterPath,
    this.id,
    this.backdropPath,
    this.title,
    this.voteAverage,
    this.overview,
    this.releaseDate,
  });
}

enum OriginalLanguage { EN, JA, FR, KO }
